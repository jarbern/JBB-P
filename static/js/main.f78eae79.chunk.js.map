{"version":3,"sources":["components/card.js","components/navigation.js","components/Blog.js","About.js","App.js","serviceWorker.js","index.js"],"names":["Vacations","Location","Title","Cost","Description","image","id","Cards","map","vacation","className","style","background","backgroundSize","Nav","useState","opened","setOpen","onClick","Blog","About","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iSAIMA,G,uBAAY,CAChB,CACEC,SAAU,WACVC,MAAO,sBACPC,KAAM,oBACNC,YAAa,yDACbC,MAAO,kDACPC,GAAI,UAEN,CACEL,SAAU,SACVC,MAAO,sBACPC,KAAM,mBACNC,YAAa,0DACbC,MAAO,uDACPC,GAAI,UAEN,CACEL,SAAU,UACVC,MAAO,oBACPC,KAAM,mBACNC,YAAa,gEACbC,MAAO,sDACPC,GAAI,UAEN,CACEL,SAAU,cACVC,MAAO,mBACPC,KAAM,mBACNC,YAAa,yDACbC,MAAO,kDACPC,GAAI,UAEN,CACEL,SAAU,eACVC,MAAO,8BACPC,KAAM,mBACNC,YAAa,0DACbC,MAAO,uDACPC,GAAI,UAEN,CACEL,SAAU,SACVC,MAAO,0BACPC,KAAM,mBACNC,YAAa,gEACbC,MAAO,sDACPC,GAAI,YAIO,SAASC,IAGtB,OACI,6BACGP,EAAUQ,KAAI,SAAAC,GAAQ,OACrB,yBAAKC,UAAY,QACf,yBAAKA,UAAY,eACf,wBAAIA,UAAY,YAAhB,IAA6BD,EAASR,UACtC,yBAAKS,UAAY,eAAeC,MAAQ,CAAEC,WAAW,QAAD,OAASH,EAASJ,MAAlB,wBAA+CQ,eAAe,WAClH,wBAAIH,UAAY,SAAhB,IAA0BD,EAASP,QAErC,yBAAKQ,UAAY,aACf,uBAAGA,UAAY,QAAQD,EAASN,MAChC,uBAAGO,UAAY,eAAf,IAA+BD,EAASL,aACxC,4BAAQM,UAAY,UAApB,2B,iBCnEC,SAASI,IAAM,IAAD,EACDC,oBAAS,GADR,mBACpBC,EADoB,KACZC,EADY,KA6B3B,OAAID,EAEF,mBAhBF,WACE,OACE,yBAAKN,UAAY,kBACjB,yBAAKA,UAAY,iBAAiBQ,QAAW,kBAAMD,GAAQ,SAAAD,GAAM,OAAKA,OACpE,yBAAKN,UAAY,OAAjB,MACA,yBAAKA,UAAY,UAAjB,KACA,yBAAKA,UAAY,UAAjB,MAEF,yBAAMJ,GAAK,YAAYI,UAAY,QAAnC,UACA,yBAAMJ,GAAK,YAAYI,UAAY,QAAnC,WACA,yBAAMJ,GAAK,YAAYI,UAAY,QAAnC,aAMF,MAIA,yBAAKA,UAAY,cACf,wBAAIA,UAAY,QAAhB,OACA,mBAjCJ,WAEE,OACE,yBAAKA,UAAY,YAAYQ,QAAW,kBAAMD,GAAQ,SAAAD,GAAM,OAAKA,OAC/D,yBAAKN,UAAY,OAAjB,MACA,yBAAKA,UAAY,UAAjB,KACA,yBAAKA,UAAY,UAAjB,QA2BF,OCzBSS,MAVf,WAEE,OACE,yBAAKT,UAAY,aACf,kBAACI,EAAD,MACA,6BACA,kBAACP,EAAD,QCDSa,MARf,WACE,OACE,yBAAKV,UAAU,SACX,yCCQOW,MATf,WACE,OACE,yBAAKX,UAAU,OACX,kBAAC,EAAD,UACA,kBAAC,EAAD,QCIYY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f78eae79.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport './card.css';\r\n//import Vacations from './VacationCompiler';\r\n\r\nconst Vacations = [\r\n  {\r\n    Location: \"Thailand\",\r\n    Title: \"Thailand Beach Trip\",\r\n    Cost: \"$3988 for 10 days\",\r\n    Description: \"CNN purchased Casey Neistat's Beme app for $25million.\",\r\n    image: \"https://source.unsplash.com/user/erondu/600x400\",\r\n    id: \"Thl001\"\r\n  },\r\n  {\r\n    Location: \"Europe\",\r\n    Title: \"European River Tour\",\r\n    Cost: \"$5988 for 7 days\",\r\n    Description: \"Learn our tips and tricks on living a nomadic lifestyle\",\r\n    image: \"https://source.unsplash.com/user/_vickyreyes/600x400\",\r\n    id: \"Eur001\"\r\n  },\r\n  {\r\n    Location: \"Romania\",\r\n    Title: \"Romanian Getaway \",\r\n    Cost: \"$3850 for 5 days\",\r\n    Description: \"The first ever decoupled starter theme for React & the WP-API\",\r\n    image: \"https://source.unsplash.com/user/ilyapavlov/600x400\",\r\n    id: \"Rum001\"\r\n  },\r\n  {\r\n    Location: \"Puerto Rico\",\r\n    Title: \"San Juan Holiday\",\r\n    Cost: \"$1750 for 7 days\",\r\n    Description: \"CNN purchased Casey Neistat's Beme app for $25million.\",\r\n    image: \"https://source.unsplash.com/user/erondu/600x400\",\r\n    id: \"Pur001\"\r\n  },\r\n  {\r\n    Location: \"South Africa\",\r\n    Title: \"South African Surf Vacation\",\r\n    Cost: \"$3988 for 5 days\",\r\n    Description: \"Learn our tips and tricks on living a nomadic lifestyle\",\r\n    image: \"https://source.unsplash.com/user/_vickyreyes/600x400\",\r\n    id: \"Saf001\"\r\n  },\r\n  {\r\n    Location: \"Canada\",\r\n    Title: \"Rocky Mountain Ski Trip\",\r\n    Cost: \"$1200 for 5 days\",\r\n    Description: \"The first ever decoupled starter theme for React & the WP-API\",\r\n    image: \"https://source.unsplash.com/user/ilyapavlov/600x400\",\r\n    id: \"Can001\"\r\n  }\r\n]\r\n\r\nexport default function Cards () {\r\n\r\n\r\n  return (\r\n      <div>\r\n        {Vacations.map(vacation => (\r\n          <div className = \"card\">\r\n            <div className = \"card-header\">\r\n              <h4 className = \"location\"> {vacation.Location }</h4>\r\n              <div className = \"Header-photo\" style ={{ background:`url(\"${vacation.image}\") no-repeat  center`, backgroundSize:\"cover\"}}></div>\r\n              <h2 className = \"title\"> {vacation.Title}</h2>\r\n            </div>\r\n            <div className = \"card-body\" >\r\n              <p className = \"cost\">{vacation.Cost}</p>\r\n              <p className = \"description\"> {vacation.Description}</p>\r\n              <button className = \"button\"> Learn More   >> </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react';\r\nimport './navigation.css'\r\n\r\nexport default function Nav(){\r\n  const [opened, setOpen] = useState(false);\r\n\r\n\r\n  function Hamburger() {\r\n\r\n    return (\r\n      <div className = \"Hamburger\" onClick = {() => setOpen(opened => !opened)}>\r\n        <div className = \"top\">  </div>\r\n        <div className = \"middle\"> </div>\r\n        <div className = \"bottom\"> </div>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  function Open(){\r\n    return(\r\n      <div className = \"OpenNavigation\">\r\n      <div className = \"Exit Hamburger\" onClick = {() => setOpen(opened => !opened)}>\r\n        <div className = \"top\">  </div>\r\n        <div className = \"middle\"> </div>\r\n        <div className = \"bottom\"> </div>\r\n      </div>\r\n      <div  id = \"MenuItem1\" className = \"menu\"> Home </div>\r\n      <div  id = \"MenuItem2\" className = \"menu\"> About </div>\r\n      <div  id = \"MenuItem3\" className = \"menu\"> Blog </div>\r\n      </div>\r\n    )\r\n  };\r\n  if (opened) {\r\n  return(\r\n    <Open/>\r\n   )\r\n };\r\n  return(\r\n    <div className = \"Navigation\">\r\n      <h2 className = \"logo\">JBB</h2>\r\n      <Hamburger/>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useReducer, useContext, useEffect, useRef } from 'react';\r\nimport './Blog.css';\r\nimport Cards from './card.js'\r\nimport Nav from './navigation.js'\r\n\r\nfunction Blog() {\r\n\r\n  return (\r\n    <div className = \"Vacations\">\r\n      <Nav/>\r\n      <br/>\r\n      <Cards/>\r\n    </div>\r\n   );\r\n  };\r\nexport default Blog\r\n","import React from 'react';\nimport './App.css';\nfunction About() {\n  return (\n    <div className=\"About\">\n        <h1> About </h1>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport './App.css';\nimport Blog from './components/Blog.js'\nimport About from './About.js'\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Blog> </Blog>\n        <About/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}